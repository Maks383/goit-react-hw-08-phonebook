{"version":3,"file":"static/js/437.92643981.chunk.js","mappings":"gOAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAe,SAAAL,GAAK,OAAIA,EAAMM,MAAV,E,uCCApBC,EAAQC,EAAAA,GAAAA,MAAH,gDAILC,EAAQD,EAAAA,GAAAA,MAAH,yG,UCALE,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACbC,GAAQC,EAAAA,EAAAA,IAAYT,GAExB,OACE,iCACE,SAACE,EAAD,UAAO,4BACP,SAACE,EAAD,CACEM,KAAK,OACLF,MAAOA,EACPG,QAAQ,yHACRC,SAAU,SAAAC,GAAC,OAAIP,GAASQ,EAAAA,EAAAA,GAAcD,EAAEE,OAAOP,OAApC,MAIlB,EChBYQ,EAAe,WAC1B,IAAMV,GAAWC,EAAAA,EAAAA,MACXX,GAAWa,EAAAA,EAAAA,IAAYf,GACvBO,GAASQ,EAAAA,EAAAA,IAAYT,GACrBiB,EAAiBrB,EAASK,QAAO,SAAAiB,GAAO,OAC5CA,EAAQC,KAAKC,cAAcC,SAASpB,EAAOmB,cADC,IAI9C,OACE,wBACGH,EAAeK,KAAI,SAAAJ,GAAO,OACzB,gBAGEA,QAASA,EAHX,WAKE,yBACGA,EAAQC,KAAK,KAAGD,EAAQK,WAE3B,mBACEC,MAAO,CACLC,QAAS,MACTC,MAAO,QACPC,OAAQ,OACRC,aAAc,MACdC,OAAQ,WAGVnB,KAAK,SACLoB,QAAS,kBAAMxB,GAASyB,EAAAA,EAAAA,IAAcb,EAAQc,IAArC,EAVX,SAWC,aAjBId,EAAQc,GAHU,KA2BhC,E,UCxCY9B,EAAQC,EAAAA,GAAAA,MAAH,8MAYLC,EAAQD,EAAAA,GAAAA,MAAH,uKAUL8B,EAAS9B,EAAAA,GAAAA,OAAH,4HCjBN+B,EAAe,WAC1B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOhB,EAAP,KAAaiB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAec,EAAf,KACM/B,GAAWC,EAAAA,EAAAA,MACXX,GAAWa,EAAAA,EAAAA,IAAYf,GAEvBkB,EAAW,SAAA0B,GACf,MAAwBA,EAAMC,cAAtBpB,EAAR,EAAQA,KAAMX,EAAd,EAAcA,MACd,OAAQW,GACN,IAAK,OACHiB,EAAQ5B,GACR,MACF,IAAK,SACH6B,EAAU7B,GAIf,EAEKgC,EAAW,SAAAF,GACfA,EAAMG,iBAEQ7C,EAAS8C,MACrB,SAAAC,GAAI,OAAIA,EAAKxB,KAAKC,gBAAkBD,EAAKC,aAArC,IAGFwB,MAAM,GAAD,OAAIzB,EAAJ,4BACLb,GAASuC,EAAAA,EAAAA,IAAc,CAAE1B,KAAAA,EAAMI,OAAAA,KACnCuB,GACD,EAEKA,EAAU,WACdV,EAAQ,IACRC,EAAU,GACX,EAED,OACE,kBACEU,OAAO,GACPP,SAAUA,EAFZ,WAIE,UAAC,EAAD,CAAOQ,QAAQ,GAAG7B,KAAK,OAAvB,UAA8B,QAE5B,SAAC,EAAD,CACET,KAAK,OACLS,KAAK,OACLX,MAAOW,EACPR,QAAQ,yHACRsC,MAAM,yIACNrC,SAAUA,EACVsC,UAAQ,QAIZ,UAAC,EAAD,CAAOF,QAAQ,GAAG7B,KAAK,SAAvB,UAAgC,UAE9B,SAAC,EAAD,CACET,KAAK,MACLS,KAAK,SACLX,MAAOe,EACPZ,QAAQ,yFACRsC,MAAM,+FACNrC,SAAUA,EACVsC,UAAQ,QAIZ,SAACjB,EAAD,CAAQvB,KAAK,SAAS8B,SAAUA,EAAhC,SAA0C,kBAK/C,ECtEc,SAASW,IACtB,IAAM7C,GAAWC,EAAAA,EAAAA,MACXR,GAAYU,EAAAA,EAAAA,IAAYX,GAM9B,OAJAsD,EAAAA,EAAAA,YAAU,WACR9C,GAAS+C,EAAAA,EAAAA,MACV,GAAE,CAAC/C,KAGF,iCACE,SAACgD,EAAA,EAAD,WACE,2BAAO,gBAET,SAACpB,EAAD,KACA,yBAAMnC,GAAa,gBACnB,SAACM,EAAD,KACA,SAACW,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/contactsFilter/ContactsFilter.styled.js","components/contactsFilter/ContactsFilter.jsx","components/contactsList/ContactsList.jsx","components/contactsForm/ContactsForm.styled.js","components/contactsForm/ContactsForm.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  padding: 20px;\n  margin-left: 100px;\n  width: 300px;\n  border-radius: 4px;\n`;","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onChangeValue } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Input, Label } from './ContactsFilter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  let value = useSelector(selectFilter);\n\n  return (\n    <>\n      <Label>Find contacts by name </Label>\n      <Input\n        type=\"text\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={e => dispatch(onChangeValue(e.target.value))}\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeValue: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul>\n      {filterContacts.map(contact => (\n        <li\n\n          key={contact.id}\n          contact={contact}\n        >\n          <p>\n            {contact.name}: {contact.number}\n          </p>\n          <button\n            style={{\n              padding: '5px',\n              width: '100px',\n              height: '30px',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              \n            }}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\nmax-width: 550px;\nmargin: 20px;\n  padding: 12px;\n  min-width: 300px;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  justify-content: center;\n  border: 2px solid;\n`;\n\nexport const Input = styled.input`\n  margin: 20px;\n  padding: 12px;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  justify-content: center;\n  border: 2px solid\n`;\n\nexport const Button = styled.button`\n  padding: 15px;\n  border-radius: 4px;\n  width: 220px;\n  cursor: pointer;\n  margin-left: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addNewContact } from 'redux/contacts/operations';\nimport { Label, Input, Button } from './ContactsForm.styled';\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const exist = contacts.find(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n    exist\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addNewContact({ name, number }));\n    onReset();\n  };\n\n  const onReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form\n      action=\"\"\n      onSubmit={onSubmit}\n    >\n      <Label htmlFor=\"\" name=\"name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={onChange}\n          required\n        />\n      </Label>\n\n      <Label htmlFor=\"\" name=\"number\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={onChange}\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\" onSubmit={onSubmit}>\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/contactsFilter/ContactsFilter';\nimport { ContactsList } from 'components/contactsList/ContactsList';\nimport { ContactsForm } from 'components/contactsForm/ContactsForm';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactsForm />\n      <div>{isLoading && 'Loading...'}</div>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","Label","styled","Input","Filter","dispatch","useDispatch","value","useSelector","type","pattern","onChange","e","onChangeValue","target","ContactsList","filterContacts","contact","name","toLowerCase","includes","map","number","style","padding","width","height","borderRadius","cursor","onClick","deleteContact","id","Button","ContactsForm","useState","setName","setNumber","event","currentTarget","onSubmit","preventDefault","find","item","alert","addNewContact","onReset","action","htmlFor","title","required","ContactsPage","useEffect","fetchContacts","Helmet"],"sourceRoot":""}